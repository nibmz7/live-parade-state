rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    match /branches/{adminid}/repository/{uid} {
    
    	function getAdmins() {
      	return ["admin@sbw.plc", "admin@test.com"];
      }
    
    	function isAdmin() {
    		return request.auth.token.email in getAdmins()
        && request.auth.uid == adminid;
    	}
      
      function isSameBranch() {
        return request.auth.token.branchid == adminid;
      }

      function validateStatus(data) {
        return  data.size() == 4
                && data.code >= 0 && data.code <= 17
                && data.remarks is string && data.remarks.size() < 20
                && data.updatedby == request.auth.uid
                && data.timestamp == request.time;
      }

      function checkStatus(timeOfDay) {
        return request.resource.data.data.status.diff(resource.data.data.status)
               .changedKeys().hasAny(['am','pm'])
                && validateStatus(request.resource.data.data.status[timeOfDay]);
      }

      function allowUserUpdate() {
        return resource.data.type == 'user' && isSameBranch()
                && request.resource.data.keys().hasOnly(['type','departmentid','data'])
                && request.resource.data.data.diff(resource.data.data).changedKeys().hasOnly(['status'])
                && (checkStatus('am') || checkStatus('pm'));
      }

      function validateDepartmentData() {
        return isAdmin() 
                && request.resource.data.keys().hasOnly(['type','data'])
                && request.resource.data.data.size() == 1
                && request.resource.data.data.name is string;
      }

      function allowDepartmentUpdate() {
        return  resource.data.type == 'department' && validateDepartmentData();
                
      }

      allow update: if allowUserUpdate() || allowDepartmentUpdate();
      
      allow create: if validateDepartmentData();
          
      allow read: if isSameBranch() || isAdmin();

    }  
  }
}